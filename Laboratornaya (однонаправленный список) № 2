using System;
using System.Collections;
using System.Collections.Generic;

namespace UnidirectionalList
{
    class Program
    {
        List<int> numList = new List<int>();
        //добавление элемента
        void AddToList(int num)
        {
            numList.Add(num);
        }

        //удаление элемента
        void RemoveToList(int num)
        {
            int indexNum = numList.IndexOf(num);
            if (indexNum < 0) Console.WriteLine("Элемент с таким значением не существует");
            else numList.RemoveAt(indexNum);
        }

        //вставка элемента на позицию перед указанным индексом
        void InsertBeforeId(int index, int num)
        {
            index--;
            numList.Insert(index, num);
        }

        //получение значения элемента по индексу
        int GetItemById (int index)
        {
            Console.WriteLine(numList[index]);
            return numList[index];
        }

        //Печать всех элементов
        void PrintAllElements()
        {
            foreach(int elem in numList)
            {
                Console.Write($"{elem}, ");
            }
            Console.WriteLine("");
        }

        // вызова методов
        void Comands(string comand)
        {
            switch(comand)
            {
                case "Add":
                    Console.Write("Введите число которое нужно добавить: ");
                    int num = Convert.ToInt32(Console.ReadLine());
                    AddToList(num);
                    Help();
                    break;
                case "Reemove":
                    Console.Write("Введите число которое нужно удалить: ");
                    int elem = Convert.ToInt32(Console.ReadLine());
                    RemoveToList(elem);
                    Help();
                    break;
                case "InsertBefore":
                    Console.Write("Введите индекс перед которым нужно вставить число: ");
                    int index = Convert.ToInt32(Console.ReadLine());
                    Console.Write("Введите число: ");
                    int number = Convert.ToInt32(Console.ReadLine());
                    InsertBeforeId(index, number);
                    Help();
                    break;
                case "Print":
                    PrintAllElements();
                    Help();
                    break;
                case "GetToIndex":
                    Console.Write("Введите индекс получаемого элемента: ");
                    int indexElem = Convert.ToInt32(Console.ReadLine());
                    GetItemById(indexElem);
                    Help();
                    break;
                case "ClearMemory":
                    Console.WriteLine($"{GC.GetTotalMemory(false)} байт занято до очистки");
                    GC.Collect(1, GCCollectionMode.Forced);
                    Console.WriteLine($"{GC.GetTotalMemory(false)} байт занято после очистки");
                    Help();
                    break;
                default:
                    Console.Write("Введена несуществующая команда, попробуйте ещё раз!");
                    Help();
                    break;
            }
        }

        //Подсказки команд
        void Help()
        {
            Console.WriteLine("Для того, что бы добавить элемент в список введите комманду \"Add\" \n" +
                "Для того, что бы удалить элемент в списке введите комманду \"Reemove\"\n" +
                "Для того, что бы вставить элемент перед нужным индексом введите комманду \"InsertBefore\"\n" +
                "Для того, что бы получить элемент по индексу введите комманду \"GetToIndex\"\n" +
                "Для того, что бы вывести на экран все элементы списка введите комманду \"Print\"\n" +
                "Для очистки памяти введите команду \"ClearMemory\"\n");
            string str = Console.ReadLine();
            Comands(str);
        }
        static void Main(string[] args)
        {
            Program a = new Program();
            a.Help();
        }
    }
}
