using System;

namespace Queue
{
    public class Item
    {
        public int Value { get; set; }
        public Item(int value)
        {
            Value = value;
        }
    }
    public class ArrQueue<T>
    {
        public Item[] queue;
        public int count;
        public int Length;
        
        public ArrQueue(int length=5)
        {
            Length = length;
            queue = new Item[Length];

            count = 0;
        }
        public Item this[int index]
        {
            get
            {
                return queue[index];
            }
            set
            {
                queue[index] = value;
            }
        }
    
        public ArrQueue<int> AddToQueue(ArrQueue<int> queue, int newItem)
        {
            var elem = new Item(newItem);
            queue[queue.count] = elem;
            queue.count++;
            if(queue.count == Length)
            {
                return InitNewBuffer(queue);
            }
            else
            {
                return queue;
            }
        }

        public static ArrQueue<int> InitNewBuffer(ArrQueue<int> queue = null)
        {
            if (queue == null)
            {
                ArrQueue<int> newqueue = new ArrQueue<int>();
                return newqueue;
            }
            else
            {
                ArrQueue<int> newqueue = new ArrQueue<int>(queue.Length * 2);
                for (int i = 0; i < queue.count; i++)
                {
                    var newElem = new Item(queue[i].Value);
                    newqueue[newqueue.count] = newElem;
                    newqueue.count++;
                }
                return newqueue;
            }
        }
        public int Remove(ArrQueue<int> queue)
        {
            if(count == 0) Console.WriteLine("Очередь пуста!");
            else
            {
                var removeElem = queue[0].Value;
                for (int i = 0; i < count; i++)
                {
                    queue[i] = queue[i + 1];
                } 
                Console.WriteLine("Элемент со значением " + removeElem + " удален!");
                count--;
                return removeElem;
            }
            return 0;
        }

        public ArrQueue<int> Clone(ArrQueue<int> queue)
        {
            ArrQueue<int> newqueue = new ArrQueue<int>(queue.Length);
            for(int i = 0; i < queue.count; i++)
            {
                var newElem = new Item(queue[i].Value);
                newqueue[newqueue.count] = newElem;
                newqueue.count++;
            }
            return newqueue;
        }

        public void Clear(ArrQueue<int> queue)
        {
            queue.count = 0;
            queue = null;
        }  
    }
    class ProgramI
    {
        static void Main(string[] args)
        {
            ArrQueue<int> queue = ArrQueue<int>.InitNewBuffer();
            queue = queue.AddToQueue(queue, 1);
            queue = queue.AddToQueue(queue, 2);
            queue = queue.AddToQueue(queue, 3);
            queue = queue.AddToQueue(queue, 4);
            queue = queue.AddToQueue(queue, 5);
            queue = queue.AddToQueue(queue, 6);
            queue = queue.AddToQueue(queue, 7);
            queue = queue.AddToQueue(queue, 8);
            queue = queue.AddToQueue(queue, 9);

            for(int i = 0; i < queue.count; i++)
            {
                Console.Write(queue[i].Value + " ");
            }
            Console.WriteLine();

            queue.Remove(queue);

            for (int i = 0; i < queue.count; i++)
            {
                Console.Write(queue[i].Value + " ");
            }
            Console.WriteLine();

            queue.Remove(queue);

            for (int i = 0; i < queue.count; i++)
            {
                Console.Write(queue[i].Value + " ");
            }
            Console.WriteLine();

            queue.Remove(queue);

            for (int i = 0; i < queue.count; i++)
            {
                Console.Write(queue[i].Value + " ");
            }
            Console.WriteLine();

            ArrQueue<int> newQueue = queue.Clone(queue);

            newQueue = newQueue.AddToQueue(newQueue, 111);

            for (int i = 0; i < newQueue.count; i++)
            {
                Console.Write(newQueue[i].Value + " ");
            }
            Console.WriteLine();

            queue.Clear(queue);
            for (int i = 0; i < newQueue.count; i++)
            {
                Console.Write(newQueue[i].Value + " ");
            }
            Console.WriteLine();
            for (int i = 0; i < queue.count; i++)
            {
                Console.Write(queue[i].Value + " ");
            }
            Console.WriteLine();
        }
    }
}
