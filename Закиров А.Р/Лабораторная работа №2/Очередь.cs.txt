using System;
using System.Collections;
using System.Collections.Generic;

namespace Queue
{
    
    class Program
    {
        static void AddToQueue(ref int[] queue, int newItem)
        {
            for(int i = 0; i < queue.Length; i++)
            {
                if (queue[i] == 0)
                {
                    queue[i] = newItem;
                    break;
                }
            }
            if(queue[queue.Length-1] != 0)
            {
                Array.Resize(ref queue, queue.Length * 2);//Можно было весь массив так организовать
            }
        }
        static int Remove(int[] queue)
        {
            int removeElem = 0;
            for (int i = 0; i < queue.Length - 1; i++)
            { 
                if(i == 0)
                {
                    Console.WriteLine("Элемент со значением " + queue[i] + " удален!");
                    removeElem = queue[i];
                }
                queue[i] = queue[i + 1];
            }
            if(removeElem == 0) Console.WriteLine("Очередь пуста!");
            return removeElem;
        }

        static int[] Clone(int[] queue)
        {
            int[] newQueue = (int[])queue.Clone();
            return newQueue;
        }

        static void Clear( ref int[] queue)
        {
            Array.Resize(ref queue, queue.Length  - queue.Length);
        }

        static void Main(string[] args)
        {
            int[] queue = new int[1];
            AddToQueue(ref queue, 1);
            AddToQueue(ref queue, 2);
            AddToQueue(ref queue, 3);
            AddToQueue(ref queue, 4);
            foreach(var elem in queue)
            {
                Console.Write(elem + " ");
            }
            Console.WriteLine();
            Remove(queue);
            foreach (var elem in queue)
            {
                Console.Write(elem + " ");
            }
            Console.WriteLine();
            Remove(queue);
            foreach (var elem in queue)
            {
                Console.Write(elem + " ");
            }
            Console.WriteLine();
            var qq = Clone(queue);
            AddToQueue(ref qq, 2);
            foreach (var elem in queue)
            {
                Console.Write(elem + " ");
            }
            Console.WriteLine();
            foreach (var elem in qq)
            {
                Console.Write(elem + " ");
            }
            Console.WriteLine();
            foreach (var elem in queue)
            {
                Console.Write(elem + " ");
            }
            Console.WriteLine();
            Console.WriteLine();
            Clear(ref queue);
            foreach (var elem in queue)
            {
                Console.Write(elem + " ");
            }
            Console.WriteLine();
